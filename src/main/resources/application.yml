##当前服务的配置 register.port[\d] 设置 发现微服务的discovery server 端口
server:
  port: 8888
##验证服务 的前缀路径
path:
  oauth:
    prefix: oauth

spring:
  application:
    name: spring-cloud-gateway
    ##解决jvm使用的冲突，tomcat中不同的server 注册jmx必须使用不同的jvm
  jmx:
    default-domain: spring-cloud-gateway
  profiles:
    active: dev
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: firstmicroservice
          uri: lb://service-demo/
          predicates:
            - Path=/demo/**
          filters:
            - SwaggerRequestFilter
            - StripPrefix=1
        - id: authservice
          uri: lb://service-auth/${path.oauth.prefix}/
          predicates:
            - Path=/${path.oauth.prefix}/**
          filters:
            - SwaggerRequestFilter
        - id: staffservice
          uri: lb://service-staff/
          predicates:
            - Path=/staff/**
          filters:
            - SwaggerRequestFilter
            - StripPrefix=1

#      globalcors:
#        cors-configurations:
#          '[/**]':
#            allowedOrigins: "http://192.168.3.182:8888"
#            allowedMethods:
#              - GET
#              - POST
#          filters:
#            - StripPrefix=1

# rate limiter configuration

rate-limit:
  bucket:
    capacity: 30
    refillTokens: 2
    refillDuration: 1
##不需要进过验证过滤器验证的路径或者是资源 忽略条件：url 排除?号之后的字符串后 任意匹配如下配置的字符串
filter:
  gateway:
    authorize:
      ignoredSubSequenceOfUrl: oauth,swagger-ui.html